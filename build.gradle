buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath "org.grails.plugins:hibernate5:7.0.0"
        classpath "gradle.plugin.com.github.pivotalservices:ya-cf-app-gradle-plugin:2.3.0-rc.8"
        classpath "org.grails.plugins:views-gradle:$grailsViewsVersion"
    }
}

version "0.9.9"
group "com.softamo"

apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: 'org.grails.grails-gsp'
apply plugin:"org.grails.plugins.views-markup"
apply plugin: "com.github.pivotalservices.cf-app"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.0.Final"
    compile "org.grails.plugins:gsp"
    compile "org.grails.plugins:views-markup:$grailsViewsVersion"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    runtime 'mysql:mysql-connector-java:8.0.20'

    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile("org.grails.plugins:geb") {
        exclude(group: 'org.gebish', module: 'geb-spock')
    }
    compileOnly "io.micronaut:micronaut-inject-groovy"
    testCompileOnly "io.micronaut:micronaut-inject-groovy"

    testCompile"org.gebish:geb-spock:3.4"
    testCompile"org.seleniumhq.selenium:selenium-support:3.141.59"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.141.59"
    testCompile "org.seleniumhq.selenium:selenium-api:3.141.59"
    testCompile "org.seleniumhq.selenium:htmlunit-driver:2.35.1"
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.35.0'
    compile 'org.grails.plugins:grails-trix-editor:1.3'
    compile 'org.grails.plugins:aws-sdk-s3:2.4.6'
    compile "org.grails.plugins:spring-security-core:$springSecurityCoreVersion"
    compile ("org.grails.plugins:spring-security-rest:$springSecurityRestVersion") {
        exclude group: 'org.grails.plugins', module:'spring-security-core'
    }
    testCompile "io.micronaut:micronaut-http-client"

    testCompile "org.testcontainers:spock:$testContainersVersion"
    testCompile "org.testcontainers:mysql:$testContainersVersion"

    compile "org.grails.plugins:grails_plugin_tvml:$grailsPluginTvmlVersion"
}


bootRun {
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
}

assets {
    minifyJs = true
    minifyCss = true
}

bootRun {
    systemProperties System.properties
}

test {
    systemProperties System.properties
}

cfConfig {
    ccHost = "api.run.pivotal.io"
    ccUser = System.getenv('CLOUDFOUNDRY_USER') ?: project.cloudFoundryUser
    ccPassword = System.getenv('CLOUDFOUNDRY_PASSWORD') ?: project.cloudFoundryPassword
    name = "movilrural-prod"
    org = "softamo.com"
    space = "production"
    filePath = "$buildDir/libs/movilrural-${version}.war"
    buildpack = "https://github.com/cloudfoundry/java-buildpack.git"
    environment = [:]
    services  = ["movilrural-cleardb"]
    instances = 1
    memory = 2048
}

